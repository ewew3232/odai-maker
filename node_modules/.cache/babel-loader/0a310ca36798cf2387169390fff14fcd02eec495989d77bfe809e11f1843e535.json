{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getDatabase, ref, set, remove, onValue } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\nexport default {\n  data() {\n    return {\n      username: '',\n      items: []\n    };\n  },\n  created() {\n    const auth = getAuth();\n    onAuthStateChanged(auth, user => {\n      if (!user) {\n        this.$router.push('/login-page');\n      }\n    });\n  },\n  methods: {\n    editItem(item) {\n      let itemToEdit = item.text;\n      let editedItem = window.prompt('お題を編集してください', itemToEdit);\n      if (editedItem) {\n        // 編集後のテキストが1000文字を超えていたら、それを切り詰めます\n        if (editedItem.length > 1000) {\n          editedItem = editedItem.slice(0, 1000);\n        }\n        const auth = getAuth();\n        const db = getDatabase();\n        if (auth.currentUser) {\n          set(ref(db, 'usernames/' + auth.currentUser.displayName + '/odai/' + item.id), {\n            id: item.id,\n            text: editedItem\n          });\n        }\n      }\n    },\n    deleteItem(item) {\n      this.items = this.items.filter(i => i.id !== item.id);\n      const auth = getAuth();\n      const db = getDatabase();\n      if (auth.currentUser) {\n        remove(ref(db, 'usernames/' + auth.currentUser.displayName + '/odai/' + item.id));\n      }\n    }\n  },\n  created() {\n    const auth = getAuth();\n    const db = getDatabase();\n    if (auth.currentUser) {\n      this.username = auth.currentUser.displayName;\n      const odaiRef = ref(db, 'usernames/' + this.username + '/odai');\n      onValue(odaiRef, snapshot => {\n        if (snapshot.exists()) {\n          this.items = Object.values(snapshot.val());\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["getDatabase","ref","set","remove","onValue","getAuth","data","username","items","created","auth","onAuthStateChanged","user","$router","push","methods","editItem","item","itemToEdit","text","editedItem","window","prompt","length","slice","db","currentUser","displayName","id","deleteItem","filter","i","odaiRef","snapshot","exists","Object","values","val"],"sources":["C:\\Users\\ST\\Desktop\\vue3\\ODAI\\src\\components\\MyPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>マイページ</h2>\r\n    <p>ユーザーネーム: {{ username }}</p>\r\n    <div v-for=\"item in items\" :key=\"item.id\">\r\n      <p>{{ item.text }}</p>\r\n      <button @click=\"editItem(item)\">編集</button>\r\n      <button @click=\"deleteItem(item)\">削除</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDatabase, ref, set, remove, onValue } from \"firebase/database\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      items: [],\r\n    };\r\n  },\r\n  created() {\r\n    const auth = getAuth();\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (!user) {\r\n        this.$router.push('/login-page');\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    editItem(item) {\r\n      let itemToEdit = item.text;\r\n      let editedItem = window.prompt('お題を編集してください', itemToEdit);\r\n      if (editedItem) {\r\n        // 編集後のテキストが1000文字を超えていたら、それを切り詰めます\r\n        if (editedItem.length > 1000) {\r\n          editedItem = editedItem.slice(0, 1000);\r\n        }\r\n        const auth = getAuth();\r\n        const db = getDatabase();\r\n        if (auth.currentUser) {\r\n          set(ref(db, 'usernames/' + auth.currentUser.displayName + '/odai/' + item.id), { id: item.id, text: editedItem });\r\n        }\r\n      }\r\n    },\r\n    deleteItem(item) {\r\n      this.items = this.items.filter(i => i.id !== item.id);\r\n      const auth = getAuth();\r\n      const db = getDatabase();\r\n      if (auth.currentUser) {\r\n        remove(ref(db, 'usernames/' + auth.currentUser.displayName + '/odai/' + item.id));\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    const auth = getAuth();\r\n    const db = getDatabase();\r\n    if (auth.currentUser) {\r\n      this.username = auth.currentUser.displayName;\r\n      const odaiRef = ref(db, 'usernames/' + this.username + '/odai');\r\n      onValue(odaiRef, (snapshot) => {\r\n        if (snapshot.exists()) {\r\n          this.items = Object.values(snapshot.val());\r\n        }\r\n      });\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\nh2 {\r\n  margin-bottom: 20px;\r\n}\r\n\r\np {\r\n  margin-bottom: 10px;\r\n}\r\n\r\ndiv[v-for] {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n  width: 80%;\r\n}\r\n\r\nbutton {\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  color: #fff;\r\n  background-color: #333;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #555;\r\n}\r\n</style>\r\n"],"mappings":";AAaA,SAASA,WAAW,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAM,QAAS,mBAAmB;AAC1E,SAASC,OAAM,QAAS,eAAe;AAEvC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,IAAG,GAAIL,OAAO,CAAC,CAAC;IACtBM,kBAAkB,CAACD,IAAI,EAAGE,IAAI,IAAK;MACjC,IAAI,CAACA,IAAI,EAAE;QACT,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;MAClC;IACF,CAAC,CAAC;EACJ,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAACC,IAAI,EAAE;MACb,IAAIC,UAAS,GAAID,IAAI,CAACE,IAAI;MAC1B,IAAIC,UAAS,GAAIC,MAAM,CAACC,MAAM,CAAC,aAAa,EAAEJ,UAAU,CAAC;MACzD,IAAIE,UAAU,EAAE;QACd;QACA,IAAIA,UAAU,CAACG,MAAK,GAAI,IAAI,EAAE;UAC5BH,UAAS,GAAIA,UAAU,CAACI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;QACxC;QACA,MAAMd,IAAG,GAAIL,OAAO,CAAC,CAAC;QACtB,MAAMoB,EAAC,GAAIzB,WAAW,CAAC,CAAC;QACxB,IAAIU,IAAI,CAACgB,WAAW,EAAE;UACpBxB,GAAG,CAACD,GAAG,CAACwB,EAAE,EAAE,YAAW,GAAIf,IAAI,CAACgB,WAAW,CAACC,WAAU,GAAI,QAAO,GAAIV,IAAI,CAACW,EAAE,CAAC,EAAE;YAAEA,EAAE,EAAEX,IAAI,CAACW,EAAE;YAAET,IAAI,EAAEC;UAAW,CAAC,CAAC;QACnH;MACF;IACF,CAAC;IACDS,UAAUA,CAACZ,IAAI,EAAE;MACf,IAAI,CAACT,KAAI,GAAI,IAAI,CAACA,KAAK,CAACsB,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACH,EAAC,KAAMX,IAAI,CAACW,EAAE,CAAC;MACrD,MAAMlB,IAAG,GAAIL,OAAO,CAAC,CAAC;MACtB,MAAMoB,EAAC,GAAIzB,WAAW,CAAC,CAAC;MACxB,IAAIU,IAAI,CAACgB,WAAW,EAAE;QACpBvB,MAAM,CAACF,GAAG,CAACwB,EAAE,EAAE,YAAW,GAAIf,IAAI,CAACgB,WAAW,CAACC,WAAU,GAAI,QAAO,GAAIV,IAAI,CAACW,EAAE,CAAC,CAAC;MACnF;IACF;EACF,CAAC;EACDnB,OAAOA,CAAA,EAAG;IACR,MAAMC,IAAG,GAAIL,OAAO,CAAC,CAAC;IACtB,MAAMoB,EAAC,GAAIzB,WAAW,CAAC,CAAC;IACxB,IAAIU,IAAI,CAACgB,WAAW,EAAE;MACpB,IAAI,CAACnB,QAAO,GAAIG,IAAI,CAACgB,WAAW,CAACC,WAAW;MAC5C,MAAMK,OAAM,GAAI/B,GAAG,CAACwB,EAAE,EAAE,YAAW,GAAI,IAAI,CAAClB,QAAO,GAAI,OAAO,CAAC;MAC/DH,OAAO,CAAC4B,OAAO,EAAGC,QAAQ,IAAK;QAC7B,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;UACrB,IAAI,CAAC1B,KAAI,GAAI2B,MAAM,CAACC,MAAM,CAACH,QAAQ,CAACI,GAAG,CAAC,CAAC,CAAC;QAC5C;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}