{"ast":null,"code":"import { getDatabase, ref as dbRef, push, set, remove } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\nexport default {\n  data() {\n    return {\n      username: '',\n      items: []\n    };\n  },\n  methods: {\n    editItem(index) {\n      let itemToEdit = this.items[index];\n      let editedItem = window.prompt('お題を編集してください', itemToEdit);\n      if (editedItem) {\n        this.items[index] = editedItem;\n        const auth = getAuth();\n        const db = getDatabase();\n        if (auth.currentUser) {\n          set(dbRef(db, 'usernames/' + auth.currentUser.displayName + '/odai/' + index), editedItem);\n        }\n      }\n    },\n    deleteItem(index) {\n      this.items.splice(index, 1);\n      const auth = getAuth();\n      const db = getDatabase();\n      if (auth.currentUser) {\n        remove(dbRef(db, 'usernames/' + auth.currentUser.displayName + '/odai/' + index));\n      }\n    }\n  },\n  async created() {\n    const auth = getAuth();\n    const db = getDatabase();\n    if (auth.currentUser) {\n      this.username = auth.currentUser.displayName;\n      const snapshot = await get(dbRef(db, 'usernames/' + this.username + '/odai'));\n      if (snapshot.exists()) {\n        this.items = Object.values(snapshot.val());\n      }\n    }\n  }\n};","map":{"version":3,"names":["getDatabase","ref","dbRef","push","set","remove","getAuth","data","username","items","methods","editItem","index","itemToEdit","editedItem","window","prompt","auth","db","currentUser","displayName","deleteItem","splice","created","snapshot","get","exists","Object","values","val"],"sources":["C:\\Users\\ST\\Desktop\\vue3\\ODAI\\src\\components\\MyPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>マイページ</h2>\r\n    <p>ユーザーネーム: {{ username }}</p>\r\n    <div v-for=\"(item, index) in items\" :key=\"index\">\r\n      <p>{{ item }}</p>\r\n      <button @click=\"editItem(index)\">編集</button>\r\n      <button @click=\"deleteItem(index)\">削除</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDatabase, ref as dbRef, push, set, remove } from \"firebase/database\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      items: [],\r\n    };\r\n  },\r\n  methods: {\r\n    editItem(index) {\r\n      let itemToEdit = this.items[index];\r\n      let editedItem = window.prompt('お題を編集してください', itemToEdit);\r\n      if (editedItem) {\r\n        this.items[index] = editedItem;\r\n        const auth = getAuth();\r\n        const db = getDatabase();\r\n        if (auth.currentUser) {\r\n          set(dbRef(db, 'usernames/' + auth.currentUser.displayName + '/odai/' + index), editedItem);\r\n        }\r\n      }\r\n    },\r\n    deleteItem(index) {\r\n      this.items.splice(index, 1);\r\n      const auth = getAuth();\r\n      const db = getDatabase();\r\n      if (auth.currentUser) {\r\n        remove(dbRef(db, 'usernames/' + auth.currentUser.displayName + '/odai/' + index));\r\n      }\r\n    },\r\n  },\r\n  async created() {\r\n    const auth = getAuth();\r\n    const db = getDatabase();\r\n    if (auth.currentUser) {\r\n      this.username = auth.currentUser.displayName;\r\n      const snapshot = await get(dbRef(db, 'usernames/' + this.username + '/odai'));\r\n      if (snapshot.exists()) {\r\n        this.items = Object.values(snapshot.val());\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":"AAaA,SAASA,WAAW,EAAEC,GAAE,IAAKC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAK,QAAS,mBAAmB;AAChF,SAASC,OAAM,QAAS,eAAe;AAEvC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAACC,KAAK,EAAE;MACd,IAAIC,UAAS,GAAI,IAAI,CAACJ,KAAK,CAACG,KAAK,CAAC;MAClC,IAAIE,UAAS,GAAIC,MAAM,CAACC,MAAM,CAAC,aAAa,EAAEH,UAAU,CAAC;MACzD,IAAIC,UAAU,EAAE;QACd,IAAI,CAACL,KAAK,CAACG,KAAK,IAAIE,UAAU;QAC9B,MAAMG,IAAG,GAAIX,OAAO,CAAC,CAAC;QACtB,MAAMY,EAAC,GAAIlB,WAAW,CAAC,CAAC;QACxB,IAAIiB,IAAI,CAACE,WAAW,EAAE;UACpBf,GAAG,CAACF,KAAK,CAACgB,EAAE,EAAE,YAAW,GAAID,IAAI,CAACE,WAAW,CAACC,WAAU,GAAI,QAAO,GAAIR,KAAK,CAAC,EAAEE,UAAU,CAAC;QAC5F;MACF;IACF,CAAC;IACDO,UAAUA,CAACT,KAAK,EAAE;MAChB,IAAI,CAACH,KAAK,CAACa,MAAM,CAACV,KAAK,EAAE,CAAC,CAAC;MAC3B,MAAMK,IAAG,GAAIX,OAAO,CAAC,CAAC;MACtB,MAAMY,EAAC,GAAIlB,WAAW,CAAC,CAAC;MACxB,IAAIiB,IAAI,CAACE,WAAW,EAAE;QACpBd,MAAM,CAACH,KAAK,CAACgB,EAAE,EAAE,YAAW,GAAID,IAAI,CAACE,WAAW,CAACC,WAAU,GAAI,QAAO,GAAIR,KAAK,CAAC,CAAC;MACnF;IACF;EACF,CAAC;EACD,MAAMW,OAAOA,CAAA,EAAG;IACd,MAAMN,IAAG,GAAIX,OAAO,CAAC,CAAC;IACtB,MAAMY,EAAC,GAAIlB,WAAW,CAAC,CAAC;IACxB,IAAIiB,IAAI,CAACE,WAAW,EAAE;MACpB,IAAI,CAACX,QAAO,GAAIS,IAAI,CAACE,WAAW,CAACC,WAAW;MAC5C,MAAMI,QAAO,GAAI,MAAMC,GAAG,CAACvB,KAAK,CAACgB,EAAE,EAAE,YAAW,GAAI,IAAI,CAACV,QAAO,GAAI,OAAO,CAAC,CAAC;MAC7E,IAAIgB,QAAQ,CAACE,MAAM,CAAC,CAAC,EAAE;QACrB,IAAI,CAACjB,KAAI,GAAIkB,MAAM,CAACC,MAAM,CAACJ,QAAQ,CAACK,GAAG,CAAC,CAAC,CAAC;MAC5C;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}