{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bdbecbf2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"お題メーカー\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"category-box\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"生成されたお題:\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"onUpdate:modelValue\", \"onInput\"];\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, (category, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"button\", {\n      class: _normalizeClass({\n        active: $data.selectedCategories.includes(category.title)\n      }),\n      onClick: $event => $options.toggleCategory(category.title)\n    }, _toDisplayString(category.title), 11 /* TEXT, CLASS, PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.generateOdai && $options.generateOdai(...args))\n  }, \"ランダム\"), $data.odai.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.odai, (o, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"odai-box\"\n    }, [_withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => $data.odai[index] = $event,\n      onInput: $event => $options.checkLength(index),\n      maxlength: \"1000\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_6), [[_vModelText, $data.odai[index]]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.saveOdai(index)\n    }, \"保存\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","class","key","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","categories","category","index","_normalizeClass","active","selectedCategories","includes","title","onClick","$event","$options","toggleCategory","_hoisted_3","_cache","args","generateOdai","odai","length","_hoisted_4","_hoisted_5","o","onInput","checkLength","maxlength","_hoisted_6","saveOdai","_hoisted_7","_createCommentVNode"],"sources":["C:\\Users\\ST\\Desktop\\vue3\\ODAI\\src\\components\\OdaiMaker.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>お題メーカー</h2>\r\n    <div class=\"category-box\">\r\n      <div v-for=\"(category, index) in categories\" :key=\"index\">\r\n        <button :class=\"{ active: selectedCategories.includes(category.title) }\" @click=\"toggleCategory(category.title)\">{{ category.title }}</button>\r\n      </div>\r\n    </div> \r\n    <button @click=\"generateOdai\">ランダム</button>\r\n    <div v-if=\"odai.length\">\r\n      <h3>生成されたお題:</h3>\r\n      <div v-for=\"(o, index) in odai\" :key=\"index\" class=\"odai-box\">\r\n        <textarea v-model=\"odai[index]\" @input=\"checkLength(index)\" maxlength=\"1000\"></textarea>\r\n        <button @click=\"saveOdai(index)\">保存</button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDatabase, ref as dbRef, push, set } from \"firebase/database\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      categories: [\r\n        { title: '天気', items: ['晴れている', '曇っている', '雨が降っている', '雪が降っている', '雷が鳴り響く', '霧のかかった'] },\r\n        { title: '季節', items: ['春の', '夏の', '秋の', '冬の'] },\r\n        // 他のカテゴリと項目をここに追加します\r\n      ],\r\n      selectedCategories: ['天気', '季節'], \r\n      selectedItems: {},\r\n      odai: [],\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    generateOdai() {\r\n      this.odai = [];\r\n      for (let i = 0; i < 3; i++) {\r\n        let odaiItems = [];\r\n        for (let category of this.selectedCategories) {\r\n          let items = this.categories.find(c => c.title === category).items;\r\n          let randomItem = items[Math.floor(Math.random() * items.length)];\r\n          odaiItems.push(randomItem);\r\n        }\r\n        this.odai.push(odaiItems.join(' '));\r\n      }\r\n    },\r\n    saveOdai(index) {\r\n      const auth = getAuth();\r\n      const db = getDatabase();\r\n      if (auth.currentUser) {\r\n        const newOdaiRef = push(dbRef(db, 'usernames/' + auth.currentUser.displayName + '/odai'));\r\n        set(newOdaiRef, { id: newOdaiRef.key, text: this.odai[index] });\r\n      }\r\n    },\r\n    checkLength(index) {\r\n      if (this.odai[index].length > 1000) {\r\n        this.odai[index] = this.odai[index].slice(0, 1000);\r\n      }\r\n    },\r\n    toggleCategory(category) {\r\n      if (this.selectedCategories.includes(category)) {\r\n        this.selectedCategories = this.selectedCategories.filter(c => c !== category);\r\n      } else {\r\n        this.selectedCategories.push(category);\r\n      }\r\n    },\r\n  },\r\n\r\n  created() {\r\n    for (let category of this.categories) {\r\n      this.selectedItems[category.title] = [];\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\nh2 {\r\n  margin-bottom: 20px;\r\n}\r\n\r\ndiv[v-for] {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  color: #fff;\r\n  background-color: #333;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  font-size: larger;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #555;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.odai-box{\r\n\r\n  border: solid;\r\n  padding-left: 10vw;\r\n  padding-right: 10vw;\r\n  padding-top: 5vw;\r\n  padding-bottom: 5vw;\r\n\r\n}\r\n\r\n.category-box{\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAAe,YAAX,QAAM;;EACLC,KAAK,EAAC;AAAc;mBAH7B;;EAAAC,GAAA;AAAA;gEAUMF,mBAAA,CAAiB,YAAb,UAAQ;mBAVlB;mBAAA;;uBACEG,mBAAA,CAgBM,cAfJC,UAAe,EACfJ,mBAAA,CAIM,OAJNK,UAIM,I,kBAHJF,mBAAA,CAEMG,SAAA,QANZC,WAAA,CAIuCC,KAAA,CAAAC,UAAU,EAJjD,CAImBC,QAAQ,EAAEC,KAAK;yBAA5BR,mBAAA,CAEM;MAFwCD,GAAG,EAAES;IAAK,IACtDX,mBAAA,CAA8I;MAArIC,KAAK,EALtBW,eAAA;QAAAC,MAAA,EAKkCL,KAAA,CAAAM,kBAAkB,CAACC,QAAQ,CAACL,QAAQ,CAACM,KAAK;MAAA;MAAMC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,CAACV,QAAQ,CAACM,KAAK;wBAAMN,QAAQ,CAACM,KAAK,gCAL1IK,UAAA,E;oCAQIrB,mBAAA,CAA2C;IAAlCiB,OAAK,EAAAK,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAK,YAAA,IAAAL,QAAA,CAAAK,YAAA,IAAAD,IAAA,CAAY;KAAE,MAAI,GACvBf,KAAA,CAAAiB,IAAI,CAACC,MAAM,I,cAAtBvB,mBAAA,CAOM,OAhBVwB,UAAA,GAUMC,UAAiB,G,kBACjBzB,mBAAA,CAGMG,SAAA,QAdZC,WAAA,CAWgCC,KAAA,CAAAiB,IAAI,EAXpC,CAWmBI,CAAC,EAAElB,KAAK;yBAArBR,mBAAA,CAGM;MAH2BD,GAAG,EAAES,KAAK;MAAEV,KAAK,EAAC;wBACjDD,mBAAA,CAAwF;MAZhG,uBAAAkB,MAAA,IAY2BV,KAAA,CAAAiB,IAAI,CAACd,KAAK,IAAAO,MAAA;MAAIY,OAAK,EAAAZ,MAAA,IAAEC,QAAA,CAAAY,WAAW,CAACpB,KAAK;MAAGqB,SAAS,EAAC;6CAZ9EC,UAAA,I,cAY2BzB,KAAA,CAAAiB,IAAI,CAACd,KAAK,G,GAC7BX,mBAAA,CAA4C;MAAnCiB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAe,QAAQ,CAACvB,KAAK;OAAG,IAAE,iBAb3CwB,UAAA,E;sCAAAC,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}