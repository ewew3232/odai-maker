{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getDatabase, ref as dbRef, push, set } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\nexport default {\n  data() {\n    return {\n      categories: [{\n        title: '天気',\n        items: ['晴れている', '曇っている', '雨が降っている', '雪が降っている', '雷が鳴り響く', '霧のかかった']\n      }, {\n        title: '季節',\n        items: ['春の', '夏の', '秋の', '冬の']\n      }\n      // 他のカテゴリと項目をここに追加します\n      ],\n      selectedCategories: [],\n      selectedItems: {},\n      odai: []\n    };\n  },\n  methods: {\n    generateOdai() {\n      this.odai = [];\n      for (let i = 0; i < 3; i++) {\n        let odaiItems = [];\n        for (let category of this.selectedCategories) {\n          let items = this.categories.find(c => c.title === category).items;\n          let randomItem = items[Math.floor(Math.random() * items.length)];\n          odaiItems.push(randomItem);\n        }\n        this.odai.push(odaiItems.join(' '));\n      }\n    },\n    saveOdai(index) {\n      const auth = getAuth();\n      const db = getDatabase();\n      if (auth.currentUser) {\n        const newOdaiRef = push(dbRef(db, 'usernames/' + auth.currentUser.displayName + '/odai'));\n        set(newOdaiRef, {\n          id: newOdaiRef.key,\n          text: this.odai[index]\n        });\n      }\n    }\n  },\n  created() {\n    for (let category of this.categories) {\n      this.selectedItems[category.title] = [];\n    }\n  }\n};","map":{"version":3,"names":["getDatabase","ref","dbRef","push","set","getAuth","data","categories","title","items","selectedCategories","selectedItems","odai","methods","generateOdai","i","odaiItems","category","find","c","randomItem","Math","floor","random","length","join","saveOdai","index","auth","db","currentUser","newOdaiRef","displayName","id","key","text","created"],"sources":["C:\\Users\\ST\\Desktop\\vue3\\ODAI\\src\\components\\OdaiMaker.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>お題メーカー</h2>\r\n    <div v-for=\"(category, index) in categories\" :key=\"index\">\r\n      <input type=\"checkbox\" :id=\"category.title\" v-model=\"selectedCategories\" :value=\"category.title\">\r\n      <label :for=\"category.title\">{{ category.title }}</label>\r\n    </div>\r\n    <button @click=\"generateOdai\">ランダム</button>\r\n    <div v-if=\"odai.length\">\r\n      <h3>生成されたお題:</h3>\r\n      <div v-for=\"(o, index) in odai\" :key=\"index\">\r\n        <textarea v-for=\"(o, index) in odai\" :key=\"index\" @input=\"checkLength(index)\" v-model=\"odai[index]\"></textarea>\r\n        <button @click=\"saveOdai(index)\">保存</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDatabase, ref as dbRef, push, set } from \"firebase/database\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      categories: [\r\n        { title: '天気', items: ['晴れている', '曇っている', '雨が降っている', '雪が降っている', '雷が鳴り響く', '霧のかかった'] },\r\n        { title: '季節', items: ['春の', '夏の', '秋の', '冬の'] },\r\n        // 他のカテゴリと項目をここに追加します\r\n      ],\r\n      selectedCategories: [],\r\n      selectedItems: {},\r\n      odai: [],\r\n    };\r\n  },\r\n  methods: {\r\n    generateOdai() {\r\n      this.odai = [];\r\n      for (let i = 0; i < 3; i++) {\r\n        let odaiItems = [];\r\n        for (let category of this.selectedCategories) {\r\n          let items = this.categories.find(c => c.title === category).items;\r\n          let randomItem = items[Math.floor(Math.random() * items.length)];\r\n          odaiItems.push(randomItem);\r\n        }\r\n        this.odai.push(odaiItems.join(' '));\r\n      }\r\n    },\r\n    saveOdai(index) {\r\n      const auth = getAuth();\r\n      const db = getDatabase();\r\n      if (auth.currentUser) {\r\n        const newOdaiRef = push(dbRef(db, 'usernames/' + auth.currentUser.displayName + '/odai'));\r\n        set(newOdaiRef, { id: newOdaiRef.key, text: this.odai[index] });\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    for (let category of this.categories) {\r\n      this.selectedItems[category.title] = [];\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AAmBA,SAASA,WAAW,EAAEC,GAAE,IAAKC,KAAK,EAAEC,IAAI,EAAEC,GAAE,QAAS,mBAAmB;AACxE,SAASC,OAAM,QAAS,eAAe;AAEvC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,CACV;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ;MAAE,CAAC,EACpF;QAAED,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;MAAE;MAC/C;MAAA,CACD;MACDC,kBAAkB,EAAE,EAAE;MACtBC,aAAa,EAAE,CAAC,CAAC;MACjBC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACF,IAAG,GAAI,EAAE;MACd,KAAK,IAAIG,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,IAAIC,SAAQ,GAAI,EAAE;QAClB,KAAK,IAAIC,QAAO,IAAK,IAAI,CAACP,kBAAkB,EAAE;UAC5C,IAAID,KAAI,GAAI,IAAI,CAACF,UAAU,CAACW,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACX,KAAI,KAAMS,QAAQ,CAAC,CAACR,KAAK;UACjE,IAAIW,UAAS,GAAIX,KAAK,CAACY,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAId,KAAK,CAACe,MAAM,CAAC,CAAC;UAChER,SAAS,CAACb,IAAI,CAACiB,UAAU,CAAC;QAC5B;QACA,IAAI,CAACR,IAAI,CAACT,IAAI,CAACa,SAAS,CAACS,IAAI,CAAC,GAAG,CAAC,CAAC;MACrC;IACF,CAAC;IACDC,QAAQA,CAACC,KAAK,EAAE;MACd,MAAMC,IAAG,GAAIvB,OAAO,CAAC,CAAC;MACtB,MAAMwB,EAAC,GAAI7B,WAAW,CAAC,CAAC;MACxB,IAAI4B,IAAI,CAACE,WAAW,EAAE;QACpB,MAAMC,UAAS,GAAI5B,IAAI,CAACD,KAAK,CAAC2B,EAAE,EAAE,YAAW,GAAID,IAAI,CAACE,WAAW,CAACE,WAAU,GAAI,OAAO,CAAC,CAAC;QACzF5B,GAAG,CAAC2B,UAAU,EAAE;UAAEE,EAAE,EAAEF,UAAU,CAACG,GAAG;UAAEC,IAAI,EAAE,IAAI,CAACvB,IAAI,CAACe,KAAK;QAAE,CAAC,CAAC;MACjE;IACF;EACF,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,KAAK,IAAInB,QAAO,IAAK,IAAI,CAACV,UAAU,EAAE;MACpC,IAAI,CAACI,aAAa,CAACM,QAAQ,CAACT,KAAK,IAAI,EAAE;IACzC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}