{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getDatabase, ref as dbRef, push, set } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\nexport default {\n  data() {\n    return {\n      categories: [\n        // ここにカテゴリと項目を追加します\n      ],\n      selectedCategories: [],\n      selectedItems: {},\n      odai: ''\n    };\n  },\n  methods: {\n    generateOdai() {\n      let odaiItems = [];\n      for (let category of this.selectedCategories) {\n        let items = this.categories.find(c => c.title === category).items;\n        let randomItem = items[Math.floor(Math.random() * items.length)];\n        odaiItems.push(randomItem);\n      }\n      this.odai = odaiItems.join(' ');\n    },\n    editOdai() {\n      // お題を編集するための処理をここに書く\n    },\n    saveOdai() {\n      const auth = getAuth();\n      const db = getDatabase();\n      if (auth.currentUser) {\n        const newOdaiRef = push(dbRef(db, 'usernames/' + auth.currentUser.displayName + '/odai'));\n        set(newOdaiRef, this.odai);\n      }\n    }\n  },\n  created() {\n    for (let category of this.categories) {\n      this.$set(this.selectedItems, category.title, []);\n    }\n  }\n};","map":{"version":3,"names":["getDatabase","ref","dbRef","push","set","getAuth","data","categories","selectedCategories","selectedItems","odai","methods","generateOdai","odaiItems","category","items","find","c","title","randomItem","Math","floor","random","length","join","editOdai","saveOdai","auth","db","currentUser","newOdaiRef","displayName","created","$set"],"sources":["C:\\Users\\ST\\Desktop\\vue3\\ODAI\\src\\components\\OdaiMaker.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>お題メーカー</h2>\r\n    <div v-for=\"(category, index) in categories\" :key=\"index\">\r\n      <input type=\"checkbox\" :id=\"category.title\" v-model=\"selectedCategories\" :value=\"category.title\">\r\n      <label :for=\"category.title\">{{ category.title }}</label>\r\n    </div>\r\n    <button @click=\"generateOdai\">ランダム</button>\r\n    <div v-if=\"odai\">\r\n      <h3>生成されたお題:</h3>\r\n      <textarea v-model=\"odai\"></textarea>\r\n      <button @click=\"editOdai\">編集完了</button>\r\n    </div>\r\n    <button @click=\"saveOdai\">保存</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDatabase, ref as dbRef, push, set } from \"firebase/database\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      categories: [\r\n        // ここにカテゴリと項目を追加します\r\n      ],\r\n      selectedCategories: [],\r\n      selectedItems: {},\r\n      odai: '',\r\n    };\r\n  },\r\n  methods: {\r\n    generateOdai() {\r\n      let odaiItems = [];\r\n      for (let category of this.selectedCategories) {\r\n        let items = this.categories.find(c => c.title === category).items;\r\n        let randomItem = items[Math.floor(Math.random() * items.length)];\r\n        odaiItems.push(randomItem);\r\n      }\r\n      this.odai = odaiItems.join(' ');\r\n    },\r\n    editOdai() {\r\n      // お題を編集するための処理をここに書く\r\n    },\r\n    saveOdai() {\r\n      const auth = getAuth();\r\n      const db = getDatabase();\r\n      if (auth.currentUser) {\r\n        const newOdaiRef = push(dbRef(db, 'usernames/' + auth.currentUser.displayName + '/odai'));\r\n        set(newOdaiRef, this.odai);\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    for (let category of this.categories) {\r\n      this.$set(this.selectedItems, category.title, []);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":";AAkBA,SAASA,WAAW,EAAEC,GAAE,IAAKC,KAAK,EAAEC,IAAI,EAAEC,GAAE,QAAS,mBAAmB;AACxE,SAASC,OAAM,QAAS,eAAe;AAEvC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;QACV;MAAA,CACD;MACDC,kBAAkB,EAAE,EAAE;MACtBC,aAAa,EAAE,CAAC,CAAC;MACjBC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAIC,SAAQ,GAAI,EAAE;MAClB,KAAK,IAAIC,QAAO,IAAK,IAAI,CAACN,kBAAkB,EAAE;QAC5C,IAAIO,KAAI,GAAI,IAAI,CAACR,UAAU,CAACS,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,KAAI,KAAMJ,QAAQ,CAAC,CAACC,KAAK;QACjE,IAAII,UAAS,GAAIJ,KAAK,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAIP,KAAK,CAACQ,MAAM,CAAC,CAAC;QAChEV,SAAS,CAACV,IAAI,CAACgB,UAAU,CAAC;MAC5B;MACA,IAAI,CAACT,IAAG,GAAIG,SAAS,CAACW,IAAI,CAAC,GAAG,CAAC;IACjC,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT;IAAA,CACD;IACDC,QAAQA,CAAA,EAAG;MACT,MAAMC,IAAG,GAAItB,OAAO,CAAC,CAAC;MACtB,MAAMuB,EAAC,GAAI5B,WAAW,CAAC,CAAC;MACxB,IAAI2B,IAAI,CAACE,WAAW,EAAE;QACpB,MAAMC,UAAS,GAAI3B,IAAI,CAACD,KAAK,CAAC0B,EAAE,EAAE,YAAW,GAAID,IAAI,CAACE,WAAW,CAACE,WAAU,GAAI,OAAO,CAAC,CAAC;QACzF3B,GAAG,CAAC0B,UAAU,EAAE,IAAI,CAACpB,IAAI,CAAC;MAC5B;IACF;EACF,CAAC;EACDsB,OAAOA,CAAA,EAAG;IACR,KAAK,IAAIlB,QAAO,IAAK,IAAI,CAACP,UAAU,EAAE;MACpC,IAAI,CAAC0B,IAAI,CAAC,IAAI,CAACxB,aAAa,EAAEK,QAAQ,CAACI,KAAK,EAAE,EAAE,CAAC;IACnD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}